<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nekosighed.mapper.mapper.VideosMapper">
  <resultMap id="BaseResultMap" type="com.nekosighed.pojo.model.Videos">
    <!--
    -->
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="audio_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="video_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="video_path" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="video_seconds" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="video_width" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="video_height" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="cover_path" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="like_counts" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
    -->
    delete from videos
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.nekosighed.pojo.model.Videos">
    <!--
    -->
    insert into videos (id, user_id, audio_id, 
      video_desc,
      video_path,
      video_seconds,
      video_width,
      video_height,
      cover_path,
      <if test="likeCounts != null">
      like_counts,
      </if>
      status,
      create_time
      )
    values (
      #{id,jdbcType=VARCHAR},
      #{userId,jdbcType=VARCHAR},
      #{audioId,jdbcType=VARCHAR},
      #{videoDesc,jdbcType=VARCHAR},
      #{videoPath,jdbcType=VARCHAR},
      #{videoSeconds,jdbcType=REAL},
      #{videoWidth,jdbcType=INTEGER},
      #{videoHeight,jdbcType=INTEGER},
      #{coverPath,jdbcType=VARCHAR},
      <if test="likeCounts != null">
      #{likeCounts,jdbcType=BIGINT},
      </if>
      #{status,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.nekosighed.pojo.model.Videos">
    <!--
    -->
    update videos
    set user_id = #{userId,jdbcType=VARCHAR},
      audio_id = #{audioId,jdbcType=VARCHAR},
      video_desc = #{videoDesc,jdbcType=VARCHAR},
      video_path = #{videoPath,jdbcType=VARCHAR},
      video_seconds = #{videoSeconds,jdbcType=REAL},
      video_width = #{videoWidth,jdbcType=INTEGER},
      video_height = #{videoHeight,jdbcType=INTEGER},
      cover_path = #{coverPath,jdbcType=VARCHAR},
      like_counts = #{likeCounts,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
    -->
    select id, user_id, audio_id, video_desc, video_path, video_seconds, video_width, 
    video_height, cover_path, like_counts, status, create_time
    from videos
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
    -->
    select id, user_id, audio_id, video_desc, video_path, video_seconds, video_width, 
    video_height, cover_path, like_counts, status, create_time
    from videos
  </select>

  <update id="updateForCover" parameterType="String">
    update videos
    set cover_path = #{coverPath, jdbcType=VARCHAR}
    where id = #{videoId, jdbcType=VARCHAR}
  </update>
</mapper>